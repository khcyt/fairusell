const kh_global=Function("return globalThis;")()||Function("return this;")()||Function("return self;")();const as_module=undefined==this;const asWorker="undefined"===typeof window&&"undefined"===typeof process&&self;const cf="kh_server";const mf="common_get_release_version_esm";kh_global.kh??={};kh_global.kh.context??="undefined"!==typeof window?kh_global.parent==kh_global?"window":"iframe":"undefined"!==typeof process?"node.js":"undefined"!==typeof self?self.name??"worker":"unknown";kh_global.kh.storage??={};const cs=kh_global.kh.storage[cf]??={cf,ms:new Set};const ms=kh_global.kh.storage[mf]??={mf,cs};cs.ms.add(ms);import*as kh_js_e from"/contrib/jsm/kh_earlybird.js";import*as kh_js_c from"/contrib/jsm/kh_classes.js";import*as kh_js_f from"/contrib/jsm/kh_functions.js";const kh_js=Object.assign({...kh_js_e},{...kh_js_c},{...kh_js_f});const name=MF`${mf}`;const print_level=undefined;import{Logger}from"/contrib/jsm/kh_log.js";const kh_log=new Logger(print_level,(()=>name));const path=await import("path");const fs=await import("fs");export function getPackageData(package_json_filename="./package.json"){let package_json={};const founded_file=path.resolve(package_json_filename);if(kh_js.isEmpty(founded_file))return package_json;let pd=fs.readFileSync(founded_file,"utf8");try{pd=JSON.parse(pd);return{...package_json,...pd}}catch(error){kh_log.error?.(T9`error in ${kh_js.currentFunctionName()} => ${error}`);return package_json}}export function getReleaseVersion(package_json_filename="./package.json"){try{return getPackageData(package_json_filename).version||"0.0.0"}catch(error){kh_log.error?.(T9`error in ${kh_js.currentFunctionName()} => ${error}`);return"0.0.0"}}export function getReleaseInfo(package_json_filename="./package.json"){const release_version=getReleaseVersion(package_json_filename);let rv_parts=release_version.split(".");if(rv_parts[0]<2020){rv_parts.rotate(1);[rv_parts[1],rv_parts[2]]=rv_parts[1].split("+")}const release_date=new Date(new Date(rv_parts.join("-")).getTime()+12*60*60*1e3);const package_data=getPackageData(package_json_filename);return{release_version,release_date,package_data}}kh_global.LoadedScripts.get(mf).resolve(ms);