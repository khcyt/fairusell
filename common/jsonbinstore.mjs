const kh_global=Function("return globalThis;")()||Function("return this;")()||Function("return self;")();const as_module=undefined==this;const asWorker="undefined"===typeof window&&"undefined"===typeof process&&self;const cf="kh_server";const mf="common_jsonbinstore_esm";kh_global.kh??={};kh_global.kh.context??="undefined"!==typeof window?kh_global.parent==kh_global?"window":"iframe":"undefined"!==typeof process?"node.js":"undefined"!==typeof self?self.name??"worker":"unknown";kh_global.kh.storage??={};const cs=kh_global.kh.storage[cf]??={cf,ms:new Set};const ms=kh_global.kh.storage[mf]??={mf,cs};cs.ms.add(ms);let jsm_prefix;if("undefined"!==typeof process){jsm_prefix=`file:///${kh_global.kh.pathes.get("own-module")}`}else{jsm_prefix=`/contrib/jsm`;console.assert(0,`${mf} is only for node.js`)}let kh_js={};Object.assign(kh_js,await import(`${jsm_prefix}/kh_earlybird${VERSION}.js`));Object.assign(kh_js,await import(`${jsm_prefix}/kh_classes${VERSION}.js`));Object.assign(kh_js,await import(`${jsm_prefix}/kh_functions${VERSION}.js`));let print_level=undefined;const{Logger}=await import(`${jsm_prefix}/kh_log${VERSION}.js`);const kh_log=new Logger(print_level,(()=>MF`${mf}`));const kh_io={...await import(`${jsm_prefix}/kh_io${VERSION}.js`)};import*as fs from"fs";import*as path from"path";import{Store as SessionStore,Cookie as SessionCookie}from"express-session";import*as mergePatch from"json8-merge-patch";const{getFileFromStaticPathes}=await import(`file:///${kh_global.kh.pathes.get("common")}/files_from_pathes${VERSION}.mjs`);const{import_json}=await import(`file:///${kh_global.kh.pathes.get("common")}/import_json${VERSION}.mjs`);const __dirname=(await import(`file:///${kh_global.kh.pathes.get("common")}/dirname${VERSION}.mjs`)).dirname(import.meta.url);export class JSONBIN{constructor({base_url,authorization,store,base_query}={}){this.options_={base_url,authorization,store,base_query}}base_url(){return this.options_.base_url}get_url(){return this.base_url()}set_url(){return this.base_url()}update_url(){return this.base_url()}delete_url(){return this.base_url()}get_query(){return this.options_.base_query||""}auth_header(){return this.options_.authorization}fetch_options(){return{headers:this.auth_header(),get_json:true}}post_fetch(result){return Promise.resolve(result)}op_get(key){return kh_io.Util.fetchData(undefined,`${this.get_url()}/${key}${this.get_query()}`,undefined,{...this.fetch_options()}).catch((error=>kh_io.Util.fetchData(undefined,`${this.get_url()}/${key}${this.get_query()}`,undefined,{...this.fetch_options(),get_json:false}).then((data=>{try{const json=JSON.parse(data);return Promise.resolve(json)}catch(error){kh_log.info?.(T9`op_get() url(${this.get_url()}/${key}${this.get_query()}) / error(${error}) / data => ${data.substring(0,30)}`);return Promise.reject(error)}})))).then(this.post_fetch.bind(this)).catch((error=>Promise.reject(error)))}op_set(key,data){return kh_io.Util.fetchData("POST",`${this.set_url()}/${key}${this.get_query()}`,data,{...this.fetch_options(),simple:false}).then(this.post_fetch.bind(this))}op_update(key,data){return kh_io.Util.fetchData("PUT",`${this.update_url()}/${key}${this.get_query()}`,data,{...this.fetch_options(),simple:false}).then(this.post_fetch.bind(this))}op_delete(key){return kh_io.Util.fetchData("DELETE",`${this.delete_url()}/${key}${this.get_query()}`,undefined,{...this.fetch_options(),simple:false}).then(this.post_fetch.bind(this))}isValid(){return!kh_js.isEmpty(this.base_url())}static end_sl(path){return!path||path.endsWith("/")?path:path+"/"}static async create(type,options={}){let jsonbin_config=import_json(__dirname+"/jsonbinstore.json",false);let further_config_path=path.resolve(__dirname+"/jsonbinstore_private.json");let further_config_exists=fs.existsSync(further_config_path);if(further_config_exists)jsonbin_config=mergePatch.apply(jsonbin_config,import_json(further_config_path,false));let further_config=getFileFromStaticPathes(`jsonbinstore.json`);if(!kh_js.isEmpty(further_config))jsonbin_config=mergePatch.apply(jsonbin_config,import_json(further_config,false));try{jsonbin_config=mergePatch.apply(jsonbin_config,JSON.parse(process.env["JSONBIN_CONFIG"]??"{}"))}catch(error){kh_log.info?.(T9`error during parse JSONBIN_CONFIG environment => ${error}`)}if(!(type in jsonbin_config))return undefined;let jsonbin;switch(type){default:case"jsonbinorg":jsonbin=new JSONBIN_org(mergePatch.apply(jsonbin_config[type],options));break;case"jsonbingists":jsonbin=new JSONBIN_gists(mergePatch.apply(jsonbin_config[type],options));break;case"jsonbinstore":case"jsonstore":jsonbin=new JSONBIN_store(mergePatch.apply(jsonbin_config[type],options));break;case"firebase":{const fb_modules=await Promise.all([import("firebase-admin/app"),import("firebase-admin/database")]);jsonbin=new JSONBIN_firebase(mergePatch.apply(jsonbin_config[type],{...options,fb:{app:fb_modules[0],database:fb_modules[1]}}));break}}return jsonbin}}export class JSONBIN_org extends JSONBIN{constructor({store="khcyt",authorization,url="https://jsonbin.org/"}={}){super({base_url:`${JSONBIN.end_sl(url)}${store}`,authorization:{Authorization:authorization,"cache-control":"no-cache"},store})}isValid(){return super.isValid()&&kh_js.isValid(this.options_.authorization)&&!kh_js.isEmpty(this.options_.authorization.Authorization)}}export class JSONBIN_firebase extends JSONBIN{constructor({appid:store,authorization,url,fb}={}){store=store.replace(/\_/g,"");super({base_url:`${JSONBIN.end_sl(url)??""}`,authorization:{},store});arguments[0].appid=store;this.options_.fb=fb;this.options_.db=kh_global.kh?.firebase?.[store]?.db;if(!kh_js.isValid(this.options_.db)){const options=arguments[0].projects[store];url=options.url;authorization=options.authorization;const serviceAccount=import_json(path.resolve(authorization),false);const firebaseApp=this.options_.fb.app.initializeApp({credential:this.options_.fb.app.cert(serviceAccount),databaseURL:url},store);kh_global.kh??={};kh_global.kh.firebase??={};kh_global.kh.firebase[store]??={};kh_global.kh.firebase[store].app=firebaseApp;kh_global.kh.firebase[store].db=this.options_.db=this.options_.fb.database.getDatabase(firebaseApp)}this.options_.app=kh_global.kh.firebase[store].app}isValid(){return kh_js.isValid(this.options_.app)&&kh_js.isValid(this.options_.db)}op_get(key){return this.options_.db.ref(this.cp(key)).get().then((snapshot=>Promise.resolve(snapshot.val())))}op_set(key,data){return this.options_.db.ref(this.cp(key)).set(kh_js.cloneJSON(data))}op_update(key,data){return this.options_.db.ref(this.cp(key)).update(kh_js.cloneJSON(data))}op_delete(key){return this.options_.db.ref(this.cp(key)).remove()}cp(path){return path&&path.startsWith(`${this.options_.store}/`)?path.substring(this.options_.store.length+1):path}}export class JSONBIN_firebase_rest extends JSONBIN{constructor({appid:store,authorization,url}={}){store=store.replace(/\_/g,"");arguments[0].appid=store;const options=arguments[0].projects[store];url=options.url;authorization=options.authorization;const{google}=undefined;let access_token=undefined;do{access_token=kh_global.kh?.firebase?.[store]?.access_token;if(!kh_js.isValid(access_token)){const serviceAccount=import_json("./js/dbraw-firebase-service-account.json",false);const scopes=["https://www.googleapis.com/auth/userinfo.email","https://www.googleapis.com/auth/firebase.database"];const jwtClient=new google.auth.JWT(serviceAccount.client_email,null,serviceAccount.private_key,scopes)}const tokenInfo=jwtClient.getTokenInfo(accessToken)}while(1);authorization=`Bearer ${accessToken}`;super({base_url:`${JSONBIN.end_sl(url)??""}`,authorization:{},store})}isValid(){return kh_js.isValid(this.options_.app)&&kh_js.isValid(this.options_.db)}op_get(key){return super.op_get(this.cp(key))}op_set(key,data){return super.op_set(this.cp(key,data))}op_update(key,data){return super.op_update(this.cp(key,data))}op_delete(key){return super.op_delete(this.cp(key))}cp(path){if(kh_js.isEmpty(path))return path;if(path.startsWith(`${this.options_.store}/`))path=path.substring(this.options_.store.length+1);if(!path.endsWith(`.json`))path=path+".json";return path}}export class JSONBIN_store extends JSONBIN{constructor({store="khcyt",authorization}={},url="https://www.jsonstore.io/"){super({base_url:`${JSONBIN.end_sl(url)}${authorization}/${store}`,store});this.isValid=()=>super.isValid()&&!kh_js.isEmpty(authorization)}op_get(key){return super.op_get(key).then((result=>result&&true==result.ok?Promise.resolve(result.result):Promise.reject(result)))}}export class JSONBIN_gists extends JSONBIN{constructor({store="khcyt",authorization,url}={}){if(!kh_js.isPaaS())process.env.NODE_TLS_REJECT_UNAUTHORIZED="0";super({base_url:`${JSONBIN.end_sl(url)}${store}`,authorization:{Authorization:authorization,"cache-control":"no-cache"},store,base_query:"?filename=jsonbin.json"})}post_fetch(result){return Promise.resolve(result&&result.result)}isValid(){return super.isValid()&&kh_js.isValid(this.options_.authorization)&&!kh_js.isEmpty(this.options_.authorization.Authorization)}}export class JSONBINStore extends SessionStore{constructor(options){super();if(kh_js.isEmpty(options))throw new kh_js.Error("invalid-argument","options");if(!kh_js.isString(options.appid)||0==options.appid.length)throw new kh_js.Error("param-not-determined","options.appid");if(!kh_js.isValid(options.jsonbin))throw new kh_js.Error("param-not-determined","options.jsonbin");this.options_={...options};let pos_cn=-1;if(-1!=(pos_cn=this.options_.appid.indexOf("_sid_cookie")))this.options_.appid=this.options_.appid.substring(0,pos_cn);if(-1!=(pos_cn=this.options_.appid.indexOf("_cookie")))this.options_.appid=this.options_.appid.substring(0,pos_cn);if(-1!=(pos_cn=this.options_.appid.indexOf("_sid")))this.options_.appid=this.options_.appid.substring(0,pos_cn);this.options_.url_postfix??="firebase"==this.options_.type?`sessions/`:`sessions/${this.options_.appid}`;this.memBuf_={};const othis=this;kh_global.setTimeout((()=>{othis.all_p_o().then((sessions=>{othis.memBuf_={...othis.memBuf_,...sessions};return Promise.resolve(sessions)}));(function sixfeetunder(){const now=Date.now();const diff_max=1e3*60*60*24*7;othis.all_p().then((sessions=>{let sessions2delete=sessions.filter((session=>kh_js.isEmpty(session.storeTime)||diff_max<now-Date.parse(session.storeTime)));sessions2delete=sessions2delete.map((session=>othis.destroy_p(session.id)));return Promise.allSettled(sessions2delete)}));return kh_global.setTimeout(sixfeetunder,diff_max)})()}),1e3)}toOnline(session){if(!kh_js.isValid(session))return session;try{if(kh_js.isString(session))session=JSON.parse(session);if(kh_js.isValid(session.cookie)){if(!(session.cookie instanceof SessionCookie))session.cookie=new SessionCookie(session.cookie);if(kh_js.isNumber(session.cookie.originalMaxAge,true)){session.cookie.maxAge=kh_js.isString(session.cookie.originalMaxAge)?Number.parseInt(session.cookie.originalMaxAge):session.cookie.originalMaxAge}if(!kh_js.isNumber(session.cookie.maxAge,true))session.cookie.maxAge=this.options_.autoTimeout>>>0}return session}catch(error){kh_log.warn?.(T9`respect error in toOnline() => ${error}`);return undefined}}all_p_o(){return this.options_.jsonbin.op_get(this.options_.url_postfix).then((sessions=>{kh_js.for_in(sessions,((k,v)=>sessions[k]=this.toOnline(v)));return Promise.resolve(sessions)})).catch((error=>404==(error&&error.statusCode)?Promise.resolve({}):Promise.reject(error)))}all_p(){return this.all_p_o().then((sessions=>{let sessions_arr=[];kh_js.for_in(sessions,((k,v)=>{const session={...v,id:k};sessions_arr.push(session)}));return Promise.resolve(sessions_arr)}))}clear_p(){this.memBuf_[sid]={};return this.options_.jsonbin.op_delete(this.options_.url_postfix)}destroy_p(sid){if(!kh_js.isValid(sid))return Promise.reject(new kh_js.Error("param-not-determined","Session-ID"));delete this.memBuf_[sid];return this.options_.jsonbin.op_delete(`${this.options_.url_postfix}/${sid}`)}all(callback){return this.all_p().then((sessions=>kh_global.setImmediateP(callback,null,sessions).then((()=>Promise.resolve(sessions))))).catch((error=>kh_global.setImmediateP(callback,error,null).then((()=>Promise.resolve(error)))))}clear(callback){return this.clear_p().then((()=>kh_global.setImmediateP(callback).then((()=>Promise.resolve(undefined))))).catch((error=>kh_global.setImmediateP(callback,error).then((()=>Promise.resolve(error)))))}destroy(sid,callback){return this.destroy_p(sid).then((()=>kh_global.setImmediateP(callback).then((()=>Promise.resolve(undefined))))).catch((error=>kh_global.setImmediateP(callback,error).then((()=>Promise.resolve(error)))))}get_p(sid){if(!kh_js.isValid(sid))return Promise.reject(new kh_js.Error("param-not-determined","Session-ID"));return this.get(sid)}get(sid,callback){if(!kh_js.isValid(sid))throw new kh_js.Error("param-not-determined","Session-ID");let session_from_mem=this.memBuf_[sid];if(kh_js.isValid(session_from_mem)){session_from_mem.appid=session_from_mem.appid||this.options_.appid;const expires=!kh_js.isValid(session_from_mem.cookie)?undefined:kh_js.isString(session_from_mem.cookie.expires)?new Date(session_from_mem.cookie.expires):session_from_mem.cookie.expires;if(expires&&Date.now()>=expires){kh_log.info?.(T9`destroy Session with SID ${sid} because cookie expires at ${expires}`);this.destroy_p(sid);session_from_mem=undefined}}kh_global.setImmediateP(callback,null,session_from_mem);return this.options_.jsonbin.op_get(`${this.options_.url_postfix}/${sid}`).then((session_from_net=>{session_from_net=this.toOnline(session_from_net);return Promise.resolve(session_from_mem)})).catch((error=>Promise.resolve(session_from_mem)))}set(sid,session,callback){if(!kh_js.isValid(sid))throw new kh_js.Error("param-not-determined","Session-ID");if(!kh_js.isValid(session))throw new kh_js.Error("param-not-determined","Session-Object");session.storeTime=(new Date).toISOString();session.appid=session.appid||this.options_.appid;this.memBuf_[sid]=session;kh_global.setImmediateP(callback);return this.options_.jsonbin.op_set(`${this.options_.url_postfix}/${sid}`,session).then((response=>{try{if(kh_js.isString(response))response=JSON.parse(response)}finally{}if(kh_js.isObject(response)&&kh_js.isNumber(response.status,true)&&422!=response.status)throw"invalid response code from json.bin";return Promise.resolve(true)})).catch((error=>Promise.resolve(error)))}length(callback){return this.options_.jsonbin.op_get(this.options_.url_postfix).then((sessions=>kh_global.setImmediateP(callback,null,Object.keys(sessions).length).then((()=>Promise.resolve(Object.keys(sessions).length))))).catch((error=>kh_global.setImmediateP(callback,error).then((()=>Promise.resolve(error)))))}touch(sid,session,callback){if(!kh_js.isValid(sid))throw new kh_js.Error("param-not-determined","Session-ID");if(!kh_js.isValid(session))throw new kh_js.Error("param-not-determined","Session-Object");kh_log.trace?.(T9`${sid} touch`);this.get(sid,((err,_cur_session)=>{if(kh_js.isValid(_cur_session)){_cur_session&&(_cur_session.cookie=session.cookie);kh_global.setImmediateP(callback);callback=undefined}}));return this.get_p(sid).then((cur_session=>{cur_session.cookie=session.cookie;return this.set(sid,cur_session,callback)})).catch((error=>kh_global.setImmediateP(callback,error).then((()=>Promise.resolve(error)))))}createSession(req,sess){sess.cookie=sess.cookie||{};sess.appid=sess.appid||this.options_.appid;super.createSession(req,sess);return sess}static async createStore(type,options){try{const jsonbin=await JSONBIN.create(type,options);if(!kh_js.isValid(jsonbin))return undefined;return new JSONBINStore({...options,jsonbin,type})}catch(error){kh_log.error?.(T9`error during create JSONBINStore => ${error}`)}}}kh_global.LoadedScripts.get(mf).resolve(ms);