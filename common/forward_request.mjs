const kh_global=Function("return globalThis;")()||Function("return this;")()||Function("return self;")();const as_module=undefined==this;const asWorker="undefined"===typeof window&&"undefined"===typeof process&&self;const cf="kh_server";const mf="common_forward_request_esm";kh_global.kh??={};kh_global.kh.context??="undefined"!==typeof window?kh_global.parent==kh_global?"window":"iframe":"undefined"!==typeof process?"node.js":"undefined"!==typeof self?self.name??"worker":"unknown";kh_global.kh.storage??={};const cs=kh_global.kh.storage[cf]??={cf,ms:new Set};const ms=kh_global.kh.storage[mf]??={mf,cs};cs.ms.add(ms);import*as kh_js_e from"/contrib/jsm/kh_earlybird.js";import*as kh_js_c from"/contrib/jsm/kh_classes.js";const kh_js=Object.assign({...kh_js_e},{...kh_js_c});const name=MF`${mf}`;const print_level=undefined;import{Logger}from"/contrib/jsm/kh_log.js";const kh_log=new Logger(print_level,(()=>name));import*as kh_io from"/contrib/jsm/kh_io.js";import{getOwnURL}from"/common/utils.mjs";import mime from"mime";const mime_extension=(mime.getExtension||mime.extension).bind(mime);const mime_getType=(mime.getType||mime.lookup).bind(mime);export async function forward({path,method="GET",data={},fetch_options={},pipe}={},req,res,next){if(!kh_js.isValid(req))throw new kh_js.Error({msg:["param-invalid","Request Object"]});const base_path=getOwnURL(req);if(kh_js.isEmpty(base_path)||kh_js.isEmpty(path)){if(pipe||fetch_options.get_native)throw new kh_js.Error({msg:["param-invalid",{base_path,path}]});return fetch_options.get_json?{}:undefined}if(!kh_js.isValid(res)){if(pipe)throw new kh_js.Error({msg:["param-invalid","Response Object"]})}let req_content_type=req.headers["content-type"];const options=kh_js.JSON8MergePatch.apply({path,method,data,fetch_options,pipe},arguments[0]);const save_promise=kh_js.isValid(req.session?.id)&&"function"==typeof req.session?.save?new Promise((function(resolve,reject){req.session.save((error=>{if(kh_js.isValid(error))kh_log.error?.(T9`error during save session in ${kh_js.currentFunctionName()}`);resolve(error??true)}))})):Promise.resolve(true);if(!kh_js.isPaaS())process.env.NODE_TLS_REJECT_UNAUTHORIZED="0";return save_promise.then((result=>kh_io.Util.fetchData(method,base_path+(base_path.endsWith("/")?"":"/")+(path.startsWith("/")?path.substring(1):path),data,fetch_options))).then((async fetch_result=>{if(pipe){const content_type=true==fetch_options.get_native&&fetch_result.headers.get("content-type")||true==fetch_options.get_json&&"application/json"||mime_getType(req.path)||options.mime_type;if(!kh_js.isEmpty(req_content_type)&&req_content_type!==content_type)throw req_content_type;if(kh_js.isValid(content_type))res.contentType(content_type);if(true==fetch_options.get_native)fetch_result.body.pipe(res);else if(true==fetch_options.get_json)res.json(fetch_result);else res.send(fetch_result);return res}else return fetch_result})).finally((()=>{const reload_promise=kh_js.isValid(req.session?.id)&&"function"==typeof req.session?.reload?new Promise((function(resolve,reject){req.session.reload((error=>{if(kh_js.isValid(error))kh_log.error?.(T9`error during reload session in ${kh_js.currentFunctionName()}`);resolve(error??true)}))})):Promise.resolve(true);return reload_promise})).catch((async error=>kh_js.isValid(next)?next("route"):Promise.reject(error))).catch((async error=>kh_js.isValid(next)?next(error):Promise.reject(error)))}export function forward_middleware(options){return function(req,res,next){req.forward=function({path,method="GET",data={},fetch_options={},pipe}={}){return forward(options,req,res,next)};return next()}}kh_global.LoadedScripts.get(mf).resolve(ms);