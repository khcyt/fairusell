const kh_global=Function("return globalThis;")()||Function("return this;")()||Function("return self;")();const as_module=undefined==this;const asWorker="undefined"===typeof window&&"undefined"===typeof process&&self;const cf="fairusell_server";const mf="fairusell_server_esm";kh_global.kh??={};kh_global.kh.context??="undefined"!==typeof window?kh_global.parent==kh_global?"window":"iframe":"undefined"!==typeof process?"node.js":"undefined"!==typeof self?self.name??"worker":"unknown";kh_global.kh.storage??={};const cs=kh_global.kh.storage[cf]??={cf,ms:new Set};const ms=kh_global.kh.storage[mf]??={mf,cs};cs.ms.add(ms);import*as path from"node:path";import*as fs from"node:fs";export async function server_module(){"use strict";if(!cs.app){return import("/common/server.mjs").then((module=>module.main())).then((async app=>{cs.app=app;const kh_server=kh_global.kh.storage["kh_server"];kh_global.LoadedScripts.get("common_server_esm").then((kh_server_ms=>{const kh_server_2=kh_server_ms.cs;console.assert(kh_server==kh_server_2,"must-be-equal","(kh_server== kh_server_2")}));let print_level=undefined;const{Logger}=await import("/contrib/jsm/kh_log.js");const kh_log=new Logger(print_level,(()=>MF`${mf}`));kh_global.LoadedScripts.get(mf).resolve(ms);return app}))}else return cs.app}server_module();